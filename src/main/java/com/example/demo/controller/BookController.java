package com.example.demo.controller;

import com.example.demo.models.Book;
import com.example.demo.repositories.BookRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;
import org.apache.commons.lang3.RandomStringUtils;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

@Controller
@RequestMapping("/book")
public class BookController {
    @Autowired
    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private BookRepository BookRepository;

    public static String IMAGE_UPLOAD_FOLDER = "src/main/resources/static/img/";
    public static String PATH_UPLOAD_FOLDER = "src/main/resources/static/path/";


    @GetMapping("/add")
    public String addForm(ModelMap model) {
        model.addAttribute("book", new Book());
        return "adder";
    }

    @PostMapping("/add")
    public  ModelAndView addSubmit(@ModelAttribute Book book,@RequestParam("image") MultipartFile image, @RequestParam("file") MultipartFile file,ModelMap model) {

        if(!file.isEmpty()) {

            try {
                // Get the file and save it somewhere
                byte[] bytes = file.getBytes();
                String ran1 = RandomStringUtils.randomAlphabetic(6);
                String name1 = ran1+"_"+ file.getOriginalFilename();
                Path path1 = Paths.get(PATH_UPLOAD_FOLDER +name1);
                Files.write(path1, bytes);
                book.setBookPath(file.getOriginalFilename());

            } catch (IOException e) {
                book.setBookPath("no path");
            }

            if(!image.isEmpty()) {

                try {
                    // Get the image and save it somewhere
                    byte[] bytes1 = image.getBytes();
                    String ran2 = RandomStringUtils.randomAlphabetic(6);
                    String name2 = ran2+"_"+ image.getOriginalFilename();
                    Path path2 = Paths.get(IMAGE_UPLOAD_FOLDER + name2);
                    Files.write(path2, bytes1);
                    book.setBookImage(name2);
                } catch (IOException e) {
                    book.setBookImage("alt.png");
                }
            }
            else{
                book.setBookImage("alt.png");
            }
        }
        else{
            System.out.println(" ----> " + book.getBookID());
            book.setBookPath("no path");
        }

        BookRepository.save(book);
        return new ModelAndView("redirect:/book/all");
    }

    @GetMapping(path="/all")
    public String getAllBooks(Model model) {
        model.addAttribute("books", BookRepository.findAll());
        return "lister";
    }

    @GetMapping("/edit/{id}")
    public String editForm(@PathVariable("id")Integer id,Model model) {
        Book b = BookRepository.findOne(id);
        System.out.println("------>ID=" + b.getBookID());
        model.addAttribute("book", b);
        return "edit";
    }

    @PostMapping("/edit")
    public ModelAndView editSubmit(@ModelAttribute Book book) {
        System.out.println("------>ID222 =" + book.getBookID());

        BookRepository.save(book);
        return new ModelAndView("redirect:/book/all");
    }

    @GetMapping("/delete/{id}")
    public String deleteBook(@PathVariable("id")Integer id,Model model) {
        BookRepository.delete(id);
        return "lister" ;
    }

}
