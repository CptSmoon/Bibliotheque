package com.example.demo.controller;


import com.example.demo.models.User;
import com.example.demo.repositories.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;

import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import javax.validation.Valid;

@Controller
@RequestMapping("/user")

public class UserController {

    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private UserRepository userRepository;


    @GetMapping("/add")
    public String addForm(Model model) {
        System.out.println("add getter reached");
        model.addAttribute("user", new User());
        return "userAdder";
    }

    @PostMapping("/add")
    public ModelAndView addSubmit(@Valid @ModelAttribute User user,BindingResult bindingResult) {

//        validator.validate(user,bindingResult);
        if(userRepository.findAllByUserMail(user.getUserMail()).size()!=0) {
            bindingResult.rejectValue("userMail", "email.existant", "email deja existant");
            return new ModelAndView("userAdder");

        }
        if(userRepository.findAllByUserLogin(user.getUserLogin()).size()!=0) {
            bindingResult.rejectValue("userLogin", "login.existant", "login deja existant");
            return new ModelAndView("userAdder");
        }
        if (bindingResult.hasErrors()) {
            return new ModelAndView("userAdder");
        }
        userRepository.save(user);

        System.out.println("add setter reached");
        return new ModelAndView("redirect:/user/all");
    }

    @GetMapping(path="/all")
    public String getAllBooks(Model model) {
        model.addAttribute("users", userRepository.findAll());
        return "userLister";
    }

}
